# This file is a template, and might need editing before it works on your project.
# Official language image. Look for the different tagged releases at:
# https://hub.docker.com/r/library/python/tags/
image: python:latest

# Change pip's cache directory to be inside the project directory since we can
# only cache local items.
stages:
- prepare
- prebuild
- test

variables:
  PIP_CACHE_DIR: "~/Desktop/Gitlab$/.cache/pip"
  
   # Following variables are used in some jobs to install specified software
  DOCKER_MACHINE_VERSION: "0.14.0"
  DUMB_INIT_VERSION: "1.0.2"
  GIT_VERSION: "2.21.0"
  GIT_VERSION_BUILD: "1"
  GIT_LFS_VERSION: "2.7.1"

# Pip's cache doesn't store the python packages
# https://pip.pypa.io/en/stable/reference/pip_install/#caching
#
# If you want to also cache the installed packages, you have to install
# them in a virtualenv and cache it as well.
before_script:
  - unset GPG_KEY

image: $CI_IMAGE

# Skip all jobs except the ones that begin and end with 'docs'.
# Used for commits including ONLY documentation changes.
# https://docs.gitlab.com/ce/development/writing_documentation.html#testing
.except_docs: &except_docs
  except:
  - /(^docs[\/-].*|.*-docs$)/
  
  
.windows_base:
  variables: &windows_base_variables
    PKG_NAMESPACE: gitlab.com\gitlab-org
    PKG_NAME: gitlab-runner
    GOPATH: "$CI_PROJECT_DIR\\.gopath"
    PKG_BASE_DIR: "$CI_PROJECT_DIR\\.gopath\\src\\$PKG_NAMESPACE"
    PKG_BUILD_DIR: "$CI_PROJECT_DIR\\.gopath\\src\\$PKG_NAMESPACE\\$PKG_NAME"

.docker: &docker
  <<: *except_docs
  services:
  - docker:dind
  variables: &docker_variables
    CI_IMAGE: registry.gitlab.com/gitlab-org/gitlab-runner/ci:1.8.7-2
    DOCKER_DRIVER: overlay2
    DOCKER_HOST: tcp://docker:2375
  tags:
  - docker

.windows1803: &windows1803
  variables: &windows1803_variables
    <<: *windows_base_variables
    WINDOWS_VERSION: nanoserver1803
  tags:
  - windows-1803
  - shell

.windows1809: &windows1809
  variables: &windows1809_variables
    <<: *windows_base_variables
    WINDOWS_VERSION: nanoserver1809
  tags:
  - windows-1809
  - shell



cache:
  paths:
    - .cache/pip
    - venv/
    - dist/*

before_script:
  - python -V               # Print out python version for debugging
  - pip install virtualenv
  - virtualenv venv
  - source venv/bin/activate
  #- pip install -r requirements.txt

test:
  script:
  #- pip install -r requirements.txt
  - python manage.py test
  
  - pip install tox flake8  # you can also use tox
  - tox -e py36,flake8

run:
  script:
  - python manage.py bdist_wheel
  # an alternative approach is to install and run:
  - pip install dist/*
  # run the command here
 # -mv build/../dist/*
  artifacts:
    paths:
    - dist/*.whl

pages:
  script:
  - pip install sphinx sphinx-rtd-theme
  - echo "" > webpage.html
  - cd doc ; make html
  - mv build/html/ ../public/
  artifacts:
    paths:
    - public
  only:
  - Tshepang
